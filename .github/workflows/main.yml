# Name of workflow
name: Main workflow

# When workflow is triggered
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
# Jobs to carry out
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Run rush install and build on our code
      - name: Install dependencies
        run: |
          node common/scripts/install-run-rush.js change -v
          node common/scripts/install-run-rush.js install
      # Run eslint to check all packages
      - name: Lint packages
        run: node common/scripts/install-run-rush.js lint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    env:
      CI: true
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Run rush install
      - name: Install dependencies
        run: |
          node common/scripts/install-run-rush.js change -v
          node common/scripts/install-run-rush.js install
      # Run unit tests for all packages
      - name: Run tests
        run: node common/scripts/install-run-rush.js test
  deploy:
    # Operating system to run job on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        app-name: [blog]
        include:
          - app-name: blog
            app: '@bereghici/blog-app'
            build-dir: 'apps/blog/build'
            site-id: DEV_NETLIFY_SITE_ID
    needs: [lint, test]
    # Steps in job
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Run rush install and build on our code
      - name: Install dependencies
        run: |
          node common/scripts/install-run-rush.js change -v
          node common/scripts/install-run-rush.js install
      - name: Get changed files
        id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ','
          fileOutput: ','
      # Find changed projects to build it
      - name: Find changed projects
        id: changedProjects
        run: |
          PROJECTS="$(node platform/affected-packages --type=apps ${{ steps.file_changes.outputs.files}} )"
          echo "::set-output name=PROJECTS::$PROJECTS"
      # Build app
      - name: Build ${{ matrix.app-name }} app
        #if: ${{ contains(steps.changedProjects.outputs.projects, matrix.app) }}
        run: |
          node common/scripts/install-run-rush.js build --verbose --to ${{ matrix.app }}
          mkdir apps/blog/.netlify
          echo "{\"siteId\": \"${{ secrets[matrix.site-id] }}\"}" > apps/blog/.netlify/state.json
      # Deploy app to netlify
      - name: Deploy ${{ matrix.app-name }} app to netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets[matrix.site-id] }}
      # - name: Deploy ${{ matrix.app-name }} app to netlify
      #   id: netlify
      #   #if: ${{ contains(steps.changedProjects.outputs.projects, matrix.app) }}
      #   uses: nwtgck/actions-netlify@v1.2.2
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets[matrix.site-id] }}
      #   with:
      #     publish-dir: ${{ matrix.build-dir }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     production-deploy: ${{ github.event_name != 'pull_request' }}
      #     enable-pull-request-comment: true
      #     enable-commit-comment: true
      #     overwrites-pull-request-comment: true
      # - name: Generate Lighthouse Report
      #   if: ${{ steps.netlify.outputs.deploy-url }}
      #   uses: abereghici/lighthouse-action@undefined_comments_url_fix
      #   with:
      #     url: ${{ steps.netlify.outputs.deploy-url }}
      #     secret: ${{ secrets.GITHUB_TOKEN }}
      #     wptConnectionSpeed: threegfast
      # - name: Saving Lighthouse Audit Artifacts
      #   if: ${{ steps.netlify.outputs.deploy-url }}
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: lighthouse-artifacts
      #     path: './results'
