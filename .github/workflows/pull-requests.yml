# Name of workflow
name: Pull requests workflow

# When workflow is triggered
on:
  pull_request:
    branches:
      - main
# Jobs to carry out
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      # Run rush install and build on our code
      - name: Install dependencies
        run: |
          node common/scripts/install-run-rush.js change -v 
          node common/scripts/install-run-rush.js install
      # Run eslint to check all packages
      - name: Lint packages
        run: node common/scripts/install-run-rush.js lint
  test:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      # Run rush install and build on our code
      - name: Install dependencies
        run: |
          node common/scripts/install-run-rush.js change -v 
          node common/scripts/install-run-rush.js install
      # Run unit tests for all packages
      - name: Run tests
        run: node common/scripts/install-run-rush.js test
  deploy:
    # Operating system to run job on
    runs-on: ubuntu-latest
    env:
      CLIENT_APP: '@bereghici/client-app'
      CLIENT_BUILD_DIR: 'apps/client/build'
      ADMIN_APP: '@bereghici/admin-app'
      ADMIN_BUILD_DIR: 'apps/admin/build'
    needs: [lint, test]
    # Steps in job
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      # Run rush install and build on our code
      - name: Install dependencies
        run: |
          node common/scripts/install-run-rush.js change -v
          node common/scripts/install-run-rush.js install
      # Find changed projects to build it
      - name: Find changed projects
        id: changedProjects
        run: |
          PROJECTS="$(node tools/detect-changed-projects)"
          echo "::set-output name=PROJECTS::$PROJECTS"
      - name: Build client app
        if: contains(${{ steps.changedProjects.outputs.projects }}, ${{ env.CLIENT_APP }})
        run: node common/scripts/install-run-rush.js rebuild --verbose --to ${{ env.CLIENT_APP }}
      - name: Deploy client app to netlify
        if: contains(${{ steps.changedProjects.outputs.projects }}, ${{ env.CLIENT_APP }})
        uses: nwtgck/actions-netlify@v1.2.0
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        with:
          publish-dir: ${{ env.CLIENT_BUILD_DIR }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
      - name: Build admin app
        if: contains(${{ steps.changedProjects.outputs.projects }}, ${{ env.ADMIN_APP }})
        run: node common/scripts/install-run-rush.js rebuild --verbose --to ${{ env.ADMIN_APP }}
      - name: Deploy admin app to netlify
        if: contains(${{ steps.changedProjects.outputs.projects }}, ${{ env.ADMIN_APP }})
        uses: nwtgck/actions-netlify@v1.2.0
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_ADMIN_SITE_ID }}
        with:
          publish-dir: ${{ env.ADMIN_BUILD_DIR }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
